<link rel="stylesheet" href="{{ 'component-productsgrid.css' | asset_url }}" media="print" onload="this.media='all'">
<noscript>{{ 'component-productsgrid.css' | asset_url | stylesheet_tag }}</noscript>


{{ collections['coleccionprod'].handle | json }}
<div class='productgrid_container'>
    {% for product in collections['coleccionprod'].products %}
        <div class='product_container'>
            <h3>{{ product.title }}</h3>
            {% comment %} {% for image in product.images %}
                <img src="{{ image | image_url: width: 300 }}" alt="{{ product.title }}" loading='lazy' width=300 height=300/>
              {% endfor %} {% endcomment %}

            <a href="{{ product.url }}">
                <img id="product_image-{{ product.url }}"  
                    src="{{ product.images | first | image_url: width: 300 }}" 
                    alt="{{ product.title }}" loading='lazy' 
                    width=300 
                    height=300
                    defaultImage="{{ product.images | first | image_url: width: 300 }}"
                />
            </a>  
            {% assign tempPrice=product.price | divided_by: 100.00 | round: 2 %}
            {% assign tempPrice=tempPrice | append: 'â‚¬' %}
            {% assign colors=settings.colors_gradiproducts | split: ',' %}
            <h2>{{ tempPrice }}</h2>
            <div class="container_input">
                {% for tempColor in colors %}
                    {% liquid 
                        assign color=tempColor | split: ":" | last 
                    %}
                    {% for variant in product.variants %}
                        {% liquid 
                            assign variantColor=variant.option1  
                            assign colorCustomer=tempColor | split: ":" | first
                        %}
                       
                        {% if colorCustomer contains variantColor %}
                            <input class="input_productgrid"
                                id="{{ variant.id }}"
                                type='radio'
                                idImageProd="product_image-{{ product.url }}"  
                                image_hover="{{ variant | image_url }}" 
                                style="accent-color:{{ color }}" 
                                checked="checked"
                                variant={{ variant | json}}
                                idProduct={{ product.id }}
                            />
                        {% endif %}
                    {% endfor %}
                {% endfor %}
            </div>
            <div class="container_quantity">
                <quantity-input class="quantity">
                    <button class="quantity__button no-js-hidden" name="minus" type="button">
                      <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                      {% render 'icon-minus' %}
                    </button>
                    <input class="quantity__input"
                        type="number"
                        name="quantity"
                        id="Quantity-{{ section.id }}"
                        min="1"
                        value="1"
                      >
                    <button class="quantity__button no-js-hidden" name="plus" type="button">
                      <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                      {% render 'icon-plus' %}
                    </button>
                </quantity-input>
            </div>
            <button 
                id={{ product.id }}
                currentVariant='null'
                class='button_productgrid'>
                Add to cart
            </button>
        </div>
    {% endfor %}
</div>

<script>

    const products=[];

    const addToCart= () => {
        let formData = {
            'items': [{
             'id': 1,
             'quantity': 1
             }]
           };
           products.push(formData);
           console.log('Productos: ',products);
           
        {% comment %} await fetch(window.Shopify.routes.root + 'cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
          })
          .then(response => {
            return response.json();
          })
          .catch((error) => {
            console.error('Error:', error);
          })
          .finally(() => {
            window.document.location.href = "https://armando-gradi-store.myshopify.com/cart"
          }); {% endcomment %}
    }

    

    const buttonsAdd=document.getElementsByClassName('button_productgrid')
    for(button of buttonsAdd){
        button.addEventListener('click',function(e){
            let variant=e.target.getAttribute('currentVariant');

            console.log(variant)
        })
    } 

    let inputs = document.getElementsByClassName("input_productgrid")
    for(item of inputs) {
        item.addEventListener("mouseover", function(e) {
            
            let image = e.target.getAttribute("image_hover")
            let imageProduct = document.getElementById(e.target.getAttribute("idImageProd"))
            imageProduct.setAttribute("src", image)
            
        })

        item.addEventListener("mouseout", function(e) {
            let imageProduct = document.getElementById(e.target.getAttribute("idImageProd"))
            let image = imageProduct.getAttribute("defaultImage")
            imageProduct.setAttribute("src", image)
            
        })

        item.addEventListener("click", function(e) {
            let image = e.target.getAttribute("image_hover")
            let imageProduct = document.getElementById(e.target.getAttribute("idImageProd"))
            let variant = e.target.getAttribute("variant")
            let idProduct = e.target.getAttribute("idProduct")
            let button=document.getElementById(idProduct)
            imageProduct.setAttribute("src", image)
            imageProduct.setAttribute("defaultImage", image)
            button.setAttribute("currentVariant", variant)
            
        })


    }

</script>

